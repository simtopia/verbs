name: build-and-release

on:
  workflow_dispatch

jobs:
  check_main:
    runs-on: ubuntu-latest
    steps:
      - name: Release from main
        if: github.ref == 'refs/heads/main'
        run: echo '::notice ::Building and uploading release'
      - name: No release
        if: github.ref != 'refs/heads/main'
        run: echo '::warning ::Release can only be run from the main branch!' && exit 1
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # aarch64, ppc64le and s390x fail?
        target: [x86_64, x86, armv7]
    needs: [check_main]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]
    needs: [check_main]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64, aarch64]
    needs: [check_main]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  sdist:
    runs-on: ubuntu-latest
    needs: [check_main]
    steps:
      - uses: actions/checkout@v3
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v3
        with:
          name: wheels
          path: dist

  release:
    runs-on: ubuntu-latest
    needs: [linux, windows, macos, sdist]
    steps:
      - run: echo "This will release"

    # TODO: Uncomment when we want to release
    # if: startsWith(github.ref, 'refs/tags/')
    # environment:
    #   name: pypi
    #   url: https://pypi.org/p/verbs
    # permissions:
    #   id-token: write
    # steps:
    # - name: Downloas dists
    #   uses: actions/download-artifact@v3
    #   with:
    #     name: dist/
    #     name dist
    # - name: Publish distribution ðŸ“¦ to PyPI
    #   uses: pypa/gh-action-pypi-publish@release/v1

  build_docs:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - run: pip install hatch
      - run: hatch run sphinx:build
      - uses: actions/upload-artifact@v3
        with:
          name: github-pages
          path: docs/python/build

  publish_docs:
    runs-on: ubuntu-latest
    needs: build_docs
    steps:
      - run: echo "This will release documentation"
    # # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    # permissions:
    #   pages: write      # to deploy to Pages
    #   id-token: write   # to verify the deployment originates from an appropriate source

    # # Deploy to the github-pages environment
    # environment:
    #   name: github-pages
    #   url: ${{ steps.deployment.outputs.page_url }}

    # # Specify runner + deployment step
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Deploy to GitHub Pages
    #     id: deployment
    #     uses: actions/deploy-pages@v4 # or specific "vX.X.X" version tag for this action
